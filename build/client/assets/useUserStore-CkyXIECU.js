import{r as w,g as $,R as x}from"./index-keZNs5ok.js";import{j as R,b as L}from"./storage-CmIiShv6.js";const O={},b=e=>{let t;const r=new Set,n=(i,v)=>{const f=typeof i=="function"?i(t):i;if(!Object.is(f,t)){const a=t;t=v??(typeof f!="object"||f===null)?f:Object.assign({},t,f),r.forEach(d=>d(t,a))}},o=()=>t,l={setState:n,getState:o,getInitialState:()=>g,subscribe:i=>(r.add(i),()=>r.delete(i)),destroy:()=>{(O?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),r.clear()}},g=t=e(n,o,l);return l},V=e=>e?b(e):b;var _={exports:{}},D={},U={exports:{}},j={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var p=w;function C(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var z=typeof Object.is=="function"?Object.is:C,T=p.useState,W=p.useEffect,A=p.useLayoutEffect,P=p.useDebugValue;function F(e,t){var r=t(),n=T({inst:{value:r,getSnapshot:t}}),o=n[0].inst,s=n[1];return A(function(){o.value=r,o.getSnapshot=t,E(o)&&s({inst:o})},[e,r,t]),W(function(){return E(o)&&s({inst:o}),e(function(){E(o)&&s({inst:o})})},[e]),P(r),r}function E(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!z(e,r)}catch{return!0}}function M(e,t){return t()}var G=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?M:F;j.useSyncExternalStore=p.useSyncExternalStore!==void 0?p.useSyncExternalStore:G;U.exports=j;var k=U.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var m=w,B=k;function N(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var H=typeof Object.is=="function"?Object.is:N,J=B.useSyncExternalStore,K=m.useRef,Q=m.useEffect,X=m.useMemo,Y=m.useDebugValue;D.useSyncExternalStoreWithSelector=function(e,t,r,n,o){var s=K(null);if(s.current===null){var u={hasValue:!1,value:null};s.current=u}else u=s.current;s=X(function(){function l(a){if(!g){if(g=!0,i=a,a=n(a),o!==void 0&&u.hasValue){var d=u.value;if(o(d,a))return v=d}return v=a}if(d=v,H(i,a))return d;var S=n(a);return o!==void 0&&o(d,S)?(i=a,d):(i=a,v=S)}var g=!1,i,v,f=r===void 0?null:r;return[function(){return l(t())},f===null?void 0:function(){return l(f())}]},[t,r,n,o]);var c=J(e,s[0],s[1]);return Q(function(){u.hasValue=!0,u.value=c},[c]),Y(c),c};_.exports=D;var Z=_.exports;const q=$(Z),I={},{useDebugValue:ee}=x,{useSyncExternalStoreWithSelector:te}=q;let y=!1;const re=e=>e;function ne(e,t=re,r){(I?"production":void 0)!=="production"&&r&&!y&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),y=!0);const n=te(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,r);return ee(n),n}const h=e=>{(I?"production":void 0)!=="production"&&typeof e!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const t=typeof e=="function"?V(e):e,r=(n,o)=>ne(t,n,o);return Object.assign(r,t),r},oe=e=>e?h(e):h,ie=oe((e,t)=>({currentUser:null,isLoading:!1,error:null,setCurrentUser:async r=>{try{e({isLoading:!0,error:null});const n=await L(r);e({currentUser:n,isLoading:!1})}catch(n){e({error:n instanceof Error?n.message:"Error setting current user",isLoading:!1})}},updateUserWeight:async r=>{try{e({isLoading:!0,error:null});const{currentUser:n}=t();if(!n)throw new Error("No current user");const o=new Date().toISOString().split("T")[0],s=n.weight||[],u=n.weightDates||[],c=u.indexOf(o);c>=0?s[c]=r:(s.push(r),u.push(o));const l={...n,weight:s,weightDates:u};await R(l),e({currentUser:l,isLoading:!1})}catch(n){e({error:n instanceof Error?n.message:"Error updating weight",isLoading:!1})}},setCurrentUserDirect:r=>{e({currentUser:r})}}));export{oe as c,ie as u};
